---
name: Build & Deploy Production
on:
  push:
    branches: [master]
jobs:
  build-docker-images:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [20]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set current date as env variable
        run: echo "NOW=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV

      - name: Set Short SHA variable
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-7`" >> $GITHUB_ENV

      - name: Get Latest tag
        id: latesttag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 'UNKNOWN' # Optional fallback tag to use when no tag can be found

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push production image
        uses: docker/build-push-action@v2
        with:
          file: provisioning/production/Dockerfile
          platforms: linux/amd64
          push: true
          tags: maelstromeous/applications:ps2alerts-website-production-${{ github.sha }}
          build-args: |
            BUILD_SHA=${{ env.SHORT_SHA }}
            BUILT=${{ env.NOW }}
            VERSION=${{ steps.latesttag.outputs.tag }}

  deploy-to-k8s:
    needs: build-docker-images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Inject the templates with the correct variables. {{ version }} refers to the Git SHA and is what changes the container version.
      - name: Update the K8s application resource file
        run: |
          sed -is -e 's|{{ application }}|ps2alerts-website|' \
          -e 's|{{ version }}|${{ github.sha }}|' \
          -e 's|{{ environment }}|production|' \
          -e 's|{{ replicas }}|3|' \
          provisioning/k8s/application.yml

      # Apply the common resources, telling k8s to change the container version to the new one.
      - uses: actions-hub/kubectl@master
        name: Apply common resources
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: apply -f provisioning/k8s/application.yml

      # Inject the application template with variables
      - name: Update the K8s environment resource file
        run: |
          sed -is -e 's|{{ application }}|ps2alerts-website|' \
          -e 's|{{ version }}|${{ github.sha }}|' \
          -e 's|{{ environment }}|production|' \
          -e 's|{{ hostname }}|ps2alerts.com|' \
          provisioning/production/k8s.yml

      # Apply application specific resources
      - uses: actions-hub/kubectl@master
        name: Apply environment specific resources
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: apply -f provisioning/production/k8s.yml

      # Outputs the rollout status and returns a 0 signal (thus completing the workflow) once it's rolled out.
      - uses: actions-hub/kubectl@master
        name: Wait for deployment to finish
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: rollout status deployment/ps2alerts-website-production -n ps2alerts
